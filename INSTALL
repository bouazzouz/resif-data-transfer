#
# SYSTEM REQUIREMENTS
#

- this program is validated for
    Redhat Enteprise Linux 6.x and above, 32 or 64 bits
    Debian Linux, Lenny and above, 32 or 64 bits
    however, this should work under any modern Unix/Linux system

You also need:

- a working 'rsync' command (version 3.0.6 and above). Check your 
rsync command by entering :

$ rsync --version

- a working GNU 'du' command. Most often, du is provided with GNU 
coreutils,  version 8.4 or above is advised. Check your du command 
by entering:

$ du --version

- you need a working Python interpreter on your system (version 
2.6.6 and above), with its full standard library. This program does 
not work with  Python 3.x. Check your python interpreter by entering:

$ /usr/bin/env python --version

- it is highly advised that your system time be synchronized (eg. using NTP)

This package comes with an argparse library (http://code.google.com/p/argparse/)
providing argument parsing support for Python < 2.7 . This library may be removed 
in a future release. It is advised that your system supports Python 2.7 branch.

# 
# NETWORK REQUIREMENTS
#

- you need a working rsync connection to resif rsync server. You may 
check your IP connectivity is working using 'nc', eg:

$ nc -z rsync.resif.fr 873

should return :

> Connection to rsync.resif.fr 873 port [tcp/rsync] succeeded!

If you don't have nc, you may use telnet, eg:
 
$ telnet rsync.resif.fr 873 

should return:

Trying xxx.xxx.xx.xx ...
Connected to rsync.resif.fr.
Escape character is '^]'.
@RSYNCD: xx.yy

If your IP connection to the remote rsync server does not work :

- first, check with RESIF datacenter operator the remote server 
is up and running
 
- then, check with your IT team that you are allowed to reach 
port tcp/873 on rsync.resif.fr

#
# AUTHENTICATION REQUIREMENTS
#

Before you begin transferring some data, RESIF datacenter operator must 
provide you with :

- your node name
- your node password (must be kept secret)

For each each data type you will transfer, you must tell RESIF datacenter 
operator the address (FQDN) of the machine you will be performing the 
transfer from. 

DNS aliases are known to cause problem while doing IP filtering. Take
care to provide the real name of your machine, not an aliased name.

There can be only one transferring machine per data type. You may use 
a single machine for all data types.

#
# INSTALLATION
#

- Choose a local user the program will run from:
    - this user should have read access to the data you want to transfer
    - you should never run under root

In this example, we will run from "sysop" user.

- Choose an installation directory: in this example, we will install in ~sysop/
but you may want to choose a shared directory if the program must be used 
by multiple users (eg: /usr/local)

Unpack the tarball :

$ tar xvzf resif-data-transfer.tgz

Move the contents to installation directory :

$ mv resif-data-transfer ~sysop/

Link executable to user's standard path, eg:

$ ln -s ~sysop/resif-data-transfer/ResifDataTransfer.py ~sysop/bin/

You may prefer to link to another directory (eg: /usr/local/bin), or edit 
your $PATH environnement variable. Then, you should be able to execute :

$ ResifDataTransfer.py -h

If not runinng, check that 'ResifDataTransfer.py' has execution bit enabled (chmod +x).

#
# CONFIGURATION
#

By default, configuration file will be searched in base directory, eg:

~sysop/resif-data-transfer/ResifDataTransfer.conf

You may want to use an alternate configuration path (see -c option).

A template configuration is provided in ResifDataTransfer.conf.dist,
copy this file to create your own configuration file :

$ cd ~sysop/resif-data-transfer/
$ cp ResifDataTransfer.conf.dist ResifDataTransfer.conf 

Edit according to your requirements.

For security reasons, configuration file must only be readable by file owner 
and group. On Unix/Linux system, you may set configuration file permissions as:

$ chmod 600 ResifDataTransfer.conf

or

$ chmod o-rwx ResifDataTransfer.conf

#
# UPGRADES
#

See UPGRADE file.

#
# BACKUPS
#

You should backup the following files:

- configuration file
- general log file 
- logbook file

You may want to rotate the general log file using a system tool 
such as 'logrotate'. You should never edit/alter loogbook contents by hand.

